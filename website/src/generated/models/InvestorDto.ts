/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    StartupDto,
    StartupDtoFromJSON,
    StartupDtoFromJSONTyped,
    StartupDtoToJSON,
} from './StartupDto';

/**
 * 
 * @export
 * @interface InvestorDto
 */
export interface InvestorDto {
    /**
     * 
     * @type {string}
     * @memberof InvestorDto
     */
    city?: string;
    /**
     * 
     * @type {string}
     * @memberof InvestorDto
     */
    country?: string;
    /**
     * 
     * @type {string}
     * @memberof InvestorDto
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof InvestorDto
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof InvestorDto
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof InvestorDto
     */
    phoneNumber?: string;
    /**
     * 
     * @type {Set<StartupDto>}
     * @memberof InvestorDto
     */
    startups?: Set<StartupDto>;
}

export function InvestorDtoFromJSON(json: any): InvestorDto {
    return InvestorDtoFromJSONTyped(json, false);
}

export function InvestorDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvestorDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'city': !exists(json, 'city') ? undefined : json['city'],
        'country': !exists(json, 'country') ? undefined : json['country'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'startups': !exists(json, 'startups') ? undefined : (new Set((json['startups'] as Array<any>).map(StartupDtoFromJSON))),
    };
}

export function InvestorDtoToJSON(value?: InvestorDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'city': value.city,
        'country': value.country,
        'email': value.email,
        'id': value.id,
        'name': value.name,
        'phoneNumber': value.phoneNumber,
        'startups': value.startups === undefined ? undefined : (Array.from(value.startups as Set<any>).map(StartupDtoToJSON)),
    };
}

